
name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [macos-13, ubuntu-22.04, windows-latest]
        include:
          - os: macos-13
            imgui-dir: lua-imgui-macos
          - os: ubuntu-22.04
            imgui-dir: lua-imgui-ubuntu
          - os: windows-latest
            imgui-dir: lua-imgui-windows
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install libgl
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt update
          sudo apt install libgl-dev
          
      - name: Build and install Lua ImGui modules
        shell: bash
        run: |
          export MACOSX_DEPLOYMENT_TARGET='13.0'
          export BUILD_DIR=$(pwd)/${{ matrix.imgui-dir }}
          cd LuaJIT-SDL2/SDL
          cmake -Bbuild -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_DEPLOYMENT_TARGET="13.0"
          cmake --build build --config Release --parallel $(nproc)
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            cmake --build build --config Release --parallel $(nproc) --target install
          else
            sudo cmake --build build --config Release --parallel $(nproc) --target install
          fi
          cd ../..
          mkdir ${BUILD_DIR}
          cd LuaJIT-GL
          cmake -DCMAKE_OSX_DEPLOYMENT_TARGET="13.0" -DLUAJIT_BIN=${BUILD_DIR} -DCMAKE_BUILD_TYPE=Release -Bbuild
          cmake --build build --config Release  --parallel 16 --verbose
          cmake --build build --config Release  -t install
          cd ..
          cd LuaJIT-SDL2
          cmake -DCMAKE_OSX_DEPLOYMENT_TARGET="13.0" -DSDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS=1 -DLUAJIT_BIN=${BUILD_DIR} -DCMAKE_BUILD_TYPE=Release -Bbuild 
          cmake --build build --config Release --parallel 16 --verbose
          cmake --build build --config Release -t install
          cd ..
          cd LuaJIT-ImGui
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            bash -c "sed 's/abs(a.x/fabs(a.x/g' -i cimnodes_r/ImNodes/ImNodes.cpp"
            bash -c "sed 's/abs(a.y/fabs(a.y/g' -i cimnodes_r/ImNodes/ImNodes.cpp"
          fi
          cmake -DCMAKE_OSX_DEPLOYMENT_TARGET="13.0" -DCMAKE_CXX_STANDARD=11 -DIMPL_GLFW=no -DIMPL_SDL=yes -DIMPL_OPENGL2=no -DIMPL_OPENGL3=yes -DSDL_PATH="" -DLUAJIT_BIN=${BUILD_DIR} -DCMAKE_BUILD_TYPE=Release -Bbuild
          cmake --build build --config Release --parallel 16 --verbose
          cmake --build build --config Release -t install
          
      # - name: Build and install Lua ImGui modules
        #if: matrix.os == 'windows-latest'
        # shell: bash
        # run: |
        #   export BUILD_DIR='${{ github.workspace }}/${{ matrix.imgui-dir }}'
        #   export INSTALL_PREFIX=${{ github.workspace }}/${{ matrix.os }}_dir
        #   mkdir '${{ github.workspace }}/${{ matrix.imgui-dir }}'
        #   cd LuaJIT-GL
        #   cmake -DCMAKE_OSX_DEPLOYMENT_TARGET="13.0" -DLUAJIT_BIN='${{ github.workspace }}/${{ matrix.imgui-dir }}' -DCMAKE_BUILD_TYPE=Release -Bbuild
        #   cmake --build build --config Release  --parallel 16 --verbose
        #   cmake --build build --config Release  -t install
        #   cd ..
        #   cd LuaJIT-SDL2
        #   cmake -DCMAKE_OSX_DEPLOYMENT_TARGET="13.0" -DSDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS=1 -DLUAJIT_BIN='${{ github.workspace }}/${{ matrix.imgui-dir }}' -DCMAKE_BUILD_TYPE=Release -Bbuild 
        #   cmake --build build --config Release --parallel 16 --verbose
        #   cmake --build build --config Release -t install
        #   cd ..
        #   cd LuaJIT-ImGui
        #   if [[ "$RUNNER_OS" == "Windows" ]]; then
        #     bash -c "sed 's/abs(a.x/fabs(a.x/g' -i cimnodes_r/ImNodes/ImNodes.cpp"
        #     bash -c "sed 's/abs(a.y/fabs(a.y/g' -i cimnodes_r/ImNodes/ImNodes.cpp"
        #   fi
        #   cmake -DCMAKE_OSX_DEPLOYMENT_TARGET="13.0" -DCMAKE_CXX_STANDARD=11 -DIMPL_GLFW=no -DIMPL_SDL=yes -DIMPL_OPENGL2=no -DIMPL_OPENGL3=yes -DSDL_PATH="" -DLUAJIT_BIN='${{ github.workspace }}/${{ matrix.imgui-dir }}' -DCMAKE_BUILD_TYPE=Release -Bbuild
        #   cmake --build build --config Release --parallel 16 --verbose
        #   cmake --build build --config Release -t install
        #   cd ..
        #   pwd
        #   ls -la
        #   #echo "Will install to ${INSTALL_PREFIX}"
        #   #mkdir -p ${INSTALL_PREFIX}/share/lua/5.1/
        #   #mkdir -p ${INSTALL_PREFIX}/lib/lua/5.1/
        #   #mv ${BUILD_DIR}/lua/* ${INSTALL_PREFIX}/share/lua/5.1/
        #   #rm -r ${BUILD_DIR}/lua
        #   #mv ${BUILD_DIR}/* ${INSTALL_PREFIX}/lib/lua/5.1/

      # - name: Compress install dir
      #   run: |
      #     tar -C ${{ github.workspace }}/${{ matrix.imgui-dir }} -czvf ${{ github.workspace }}/${{ matrix.imgui-dir }}.tar.gz .
      
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.imgui-dir }}
          path: ${{ github.workspace }}/${{ matrix.imgui-dir }}/
