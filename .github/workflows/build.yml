# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-linux:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - os: windows-latest
            imgui-dir: lua-imgui-win64
          - os: ubuntu-latest
            imgui-dir: lua-imgui-ubuntu
          - os: macos-latest
            imgui-dir: lua-imgui-macos
        #os: [ubuntu-latest, windows-latest, macos-latest]
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set MACOSX_DEPLOYMENT_TARGET
        if: runner.os == 'macOS'
        run: |
          echo 'MACOSX_DEPLOYMENT_TARGET=14.0' >> $GITHUB_ENV
          
      - name: Install libgl
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt update
          sudo apt install libgl-dev
          
      - name: Build SDL2
        shell: bash
        run: |
          cd LuaJIT-SDL2/SDL &&
          cmake -Bbuild 
          cmake --build build --parallel $(nproc)
          
      - name: Install SDL2
        if: matrix.os != 'windows-latest'
        shell: bash
        run: |
          cd LuaJIT-SDL2/SDL &&
          sudo cmake --build build --parallel $(nproc) --target install
          
      - name: Install SDL2
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          cd LuaJIT-SDL2/SDL &&
          cmake --build build --parallel $(nproc) --target install
          
      - name: Build and install Lua ImGui modules
        #if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          export BUILD_DIR='${{ github.workspace }}/${{ matrix.imgui-dir }}'
          export INSTALL_PREFIX=${{ github.workspace }}/${{ matrix.os }}_dir
          mkdir '${{ github.workspace }}/${{ matrix.imgui-dir }}'
          cd LuaJIT-GL
          cmake -DCMAKE_BUILD_TYPE=Debug -DLUAJIT_BIN='${{ github.workspace }}/${{ matrix.imgui-dir }}' -Bbuild
          cmake --build build --parallel 16 --verbose
          cmake --build build -t install
          cd ..
          cd LuaJIT-SDL2
          cmake -DSDL_VIDEO_DRIVER_X11_SUPPORTS_GENERIC_EVENTS=1 -DCMAKE_BUILD_TYPE=Debug -DLUAJIT_BIN='${{ github.workspace }}/${{ matrix.imgui-dir }}' -Bbuild
          cmake --build build --parallel 16 --verbose
          cmake --build build -t install
          cd ..
          cd LuaJIT-ImGui
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            bash -c "sed 's/abs(a.x/fabs(a.x/g' -i cimnodes_r/ImNodes/ImNodes.cpp"
            bash -c "sed 's/abs(a.y/fabs(a.y/g' -i cimnodes_r/ImNodes/ImNodes.cpp"
          fi
          cmake -DCMAKE_BUILD_TYPE=Debug -DIMPL_GLFW=no -DIMPL_SDL=yes -DIMPL_OPENGL2=no -DIMPL_OPENGL3=yes -DSDL_PATH="" -DLUAJIT_BIN='${{ github.workspace }}/${{ matrix.imgui-dir }}' -Bbuild
          cmake --build build --parallel 16 --verbose
          cmake --build build -t install
          cd ..
          pwd
          ls -la
          #echo "Will install to ${INSTALL_PREFIX}"
          #mkdir -p ${INSTALL_PREFIX}/share/lua/5.1/
          #mkdir -p ${INSTALL_PREFIX}/lib/lua/5.1/
          #mv ${BUILD_DIR}/lua/* ${INSTALL_PREFIX}/share/lua/5.1/
          #rm -r ${BUILD_DIR}/lua
          #mv ${BUILD_DIR}/* ${INSTALL_PREFIX}/lib/lua/5.1/

      - name: Compress install dir
        run: |
          tar -C ${{ github.workspace }}/${{ matrix.imgui-dir }} -czvf ${{ github.workspace }}/${{ matrix.imgui-dir }}.tar.gz .

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.imgui-dir }}.tar.gz
          path: ${{ github.workspace }}/${{ matrix.imgui-dir }}.tar.gz
